name: Python CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev
    - name: Install project
      run: poetry install --no-interaction --no-root

    - name: Lint with Black, Ruff, Flake8
      run: |
        poetry run black --check .
        poetry run ruff check .
        poetry run flake8 .
    - name: Type check with MyPy
      run: poetry run mypy --strict src/ tests/
    - name: Test with Pytest
      run: poetry run pytest tests/
    - name: Scheduler Dry-run
      run: poetry run python -m airdrops.scheduler.bot --once --dry-run